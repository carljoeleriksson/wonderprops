//jQuery-function for fadeToggle-showing the cart on click.
(function () {
	$("#cart").on("click", function () {
		$(".cart").fadeToggle("fast");
	});
})();

// CHANGING COLOR-themes
// Declaring Array of color-themes.
const themes = [
	{name: 'default', url: './css/default.css'},
	{name: 'blue', url: './css/blue.css'},
	{name: 'green', url: './css/green.css'},
	{name: 'light-red', url: './css/light-red.css'},
	{name: 'purple', url: './css/purple.css'},
	{name: 'red', url: './css/red.css'},
	{name: 'yellow', url: './css/yellow.css'}
]
//Wand button listens for Click and runs setTheme() with a random index.
document.querySelector('#colorwand-btn').addEventListener('click', function () {
	const numberOfThemes = themes.length;
	let randomNr = Math.floor(Math.random() * numberOfThemes)
	setTheme(randomNr);
});
//set the url of the css-elem to the indexnr generated by the click-function. 
function setTheme(randomNr) {
	document.getElementById('switcher-id').href = themes[randomNr].url;
	console.log('Color-theme: ', themes[randomNr].name);
}
//sets the theme to default (index 0) everytime the page is reloaded.
setTheme(0);


// GET PRODUCTS

//create the product item.
function createProductItem(product, productsElem) {
    let productItem = document.createElement('article');
	productItem.classList.add('product-item');
    productItem.innerHTML = 
		`<img src="${product.img}" class="product-img">
		<section class="specs">
			<h2 class="product-name">${product.name}</h2>
			<p class="product-desc">${product.description}</p>
			<strong class="product-price">$${product.price}</strong>
			<button class="addToCart" id="${product.id}-btn" type="button" onclick="addToCart('${product.id}')">Add To Cart</button>
		</section>`
	;
    productsElem.append(productItem);  
}

function displayProducts(products) {
    const productsElem = document.querySelector('#products');
    productsElem.innerHTML = '';
	console.log(products.allProducts.length);
    for(let i = 0; i < products.allProducts.length; i++) {
        createProductItem(products.allProducts[i], productsElem);
    }
}

async function getProducts() {
    const response = await fetch('http://localhost:8000/api/webshop/products');
    const data = await response.json();
    console.log(data);
    displayProducts(data);
}



function createCartItem(cartProduct, cartElem){
	cartItem = document.createElement('li')
	cartItem.innerHTML = `
	<img src="${cartProduct.img}" class="item-img" alt="${cartProduct.img}" />
	<article>
		<span class="item-name">${cartProduct.name}</span>
		<span class="item-price">$${cartProduct.price}</span>
	</article>
	<button class="removeFromCart" data-id="${cartProduct.id}" id="${cartProduct.id}-remove-btn" type="button" onclick="removeFromCart('${cartProduct.id}')"><img src="img/remove.svg"></button>
	`
	cartElem.append(cartItem);
}

function displayCart(cart) {
	const cartElem = document.querySelector('.cart-items');
	cartElem.innerHTML = '';
	let priceArr = [];
	for(let i = 0; i < cart.cart.length; i++) {
		console.log(cart.cart[i].price);
		priceArr.push(parseInt(cart.cart[i].price));
	}
	const totalCart = priceArr.reduce((a, b) => a + b, 0);
	
	document.querySelector('.cart-total').innerHTML = `<span>Total: <b>$${totalCart}</b></span>`

	if(cart.cart.length > 0) {
		for(let i = 0; i < cart.cart.length; i++) {
			createCartItem(cart.cart[i], cartElem);
		}
	} else {
		cartElem.innerHTML = '<h3>Your cart is empty ☹️</h3>';
	}
}

async function getCart() {
	const response = await fetch('http://localhost:8000/api/webshop/cart');
	const data = await response.json();
	const badges = document.querySelectorAll('.badge');
	const cart = data.cart;
	
	if(data.cartCount > 0) {
		for (var i = 0; i < badges.length; i++) {
			badges[i].innerHTML = data.cartCount;
			badges[i].classList.remove('hidden');
		}
	} else {
		for (var i = 0; i < badges.length; i++) {
			if(!badges[i].classList.contains('hidden')) {	
				badges[i].classList.add('hidden');
			}
		}
	}
	for (var i = 0; i < cart.length; i++) {
		const addToCartBtn = document.querySelector(`#${cart[i].id}-btn`);
		addToCartBtn.classList.add('disabled');
		addToCartBtn.innerHTML = 'Added to cart!';
	}

	displayCart(data);
}

async function addToCart(productId) {
	const response = await fetch(`http://localhost:8000/api/webshop/addtocart/${productId}`, {
		method: 'POST',
		headers: {
			'Content-Type': 'application/json'
		}
	});

	const data = await response.json();
	const addToCartBtn = document.querySelector(`#${productId}-btn`);
	if(data.success = true){
		addToCartBtn.innerHTML = 'Added to cart!';
		addToCartBtn.classList.add('disabled');

		getCart();
	} else {
		alert(data.message);
	}
	
}

async function removeFromCart(productId) {
	const response = await fetch(`http://localhost:8000/api/webshop/removefromcart/${productId}`, {
		method: 'DELETE'
	});
	const data = await response.json();
	
	const addToCartBtn = document.querySelector(`#${productId}-btn`);
	if(data.success = true){
		addToCartBtn.innerHTML = 'Add to cart';
		addToCartBtn.classList.remove('disabled');
		getCart();
	}
}


getProducts();
getCart();